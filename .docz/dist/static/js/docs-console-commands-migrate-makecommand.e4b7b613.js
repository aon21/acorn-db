(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./docs/console/commands/migrate/makecommand.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return l});var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),i=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),b={},r="wrapper";function l(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)(r,Object.assign({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"tinypixelacorndatabaseconsolecommandsmigratemakecommand"},"TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\MakeCommand"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Class name: MakeCommand"),Object(i.b)("li",{parentName:"ul"},"Namespace: TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate"),Object(i.b)("li",{parentName:"ul"},"Parent class: TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand")),Object(i.b)("h2",{id:"properties"},"Properties"),Object(i.b)("h3",{id:"name"},"$name"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"protected mixed $name = ' '\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected"))),Object(i.b)("h3",{id:"signature"},"$signature"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"protected string $signature = 'migrate:make {name : The name of your migration}\n                        {table : The table to migrate.}\n                        {--create : Creates table}'\n")),Object(i.b)("p",null,"The console command signature."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected"))),Object(i.b)("h3",{id:"description"},"$description"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"protected string $description = 'Create a new migration file'\n")),Object(i.b)("p",null,"The description of the command."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected"))),Object(i.b)("h3",{id:"creator"},"$creator"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"protected \\Illuminate\\Database\\Migrations\\MigrationCreator $creator\n")),Object(i.b)("p",null,"The migration creator instance."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected"))),Object(i.b)("h2",{id:"methods"},"Methods"),Object(i.b)("h3",{id:"__construct"},"__construct"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"mixed TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\MakeCommand::__construct(\\Illuminate\\Database\\Migrations\\MigrationCreator $creator)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"public"))),Object(i.b)("h4",{id:"arguments"},"Arguments"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"$creator ",Object(i.b)("strong",{parentName:"li"},"Illuminate\\Database\\Migrations\\MigrationCreator"))),Object(i.b)("h3",{id:"handle"},"handle"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"void TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\MakeCommand::handle()\n")),Object(i.b)("p",null,"Execute the console command."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"public"))),Object(i.b)("h3",{id:"writemigration"},"writeMigration"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"string TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\MakeCommand::writeMigration(string $name, string $table, boolean $create)\n")),Object(i.b)("p",null,"Write the migration file to disk."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected"))),Object(i.b)("h4",{id:"arguments-1"},"Arguments"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"$name ",Object(i.b)("strong",{parentName:"li"},"string")),Object(i.b)("li",{parentName:"ul"},"$table ",Object(i.b)("strong",{parentName:"li"},"string")),Object(i.b)("li",{parentName:"ul"},"$create ",Object(i.b)("strong",{parentName:"li"},"boolean"))),Object(i.b)("h3",{id:"getmigrationpath"},"getMigrationPath"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"string TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand::getMigrationPath()\n")),Object(i.b)("p",null,"Get the path to the migration directory."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected")),Object(i.b)("li",{parentName:"ul"},"This method is defined by TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand")),Object(i.b)("h3",{id:"getmigrationpaths"},"getMigrationPaths"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"array TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand::getMigrationPaths()\n")),Object(i.b)("p",null,"Get all of the migration paths."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected")),Object(i.b)("li",{parentName:"ul"},"This method is defined by TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand")),Object(i.b)("h3",{id:"usingrealpath"},"usingRealPath"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"boolean TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand::usingRealPath()\n")),Object(i.b)("p",null,'Determine if the given path(s) are pre-resolved "real" paths.'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Visibility: ",Object(i.b)("strong",{parentName:"li"},"protected")),Object(i.b)("li",{parentName:"ul"},"This method is defined by TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand")))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/console/commands/migrate/makecommand.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-console-commands-migrate-makecommand.151c9eda543485dea75c.js.map