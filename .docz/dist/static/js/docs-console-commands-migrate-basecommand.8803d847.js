(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./docs/console/commands/migrate/basecommand.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return s});var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),i={},b="wrapper";function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)(b,Object.assign({},i,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"tinypixelacorndatabaseconsolecommandsmigratebasecommand"},"TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Class name: BaseCommand"),Object(o.b)("li",{parentName:"ul"},"Namespace: TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate"),Object(o.b)("li",{parentName:"ul"},"Parent class: Roots\\Acorn\\Console\\Commands\\Command")),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)("h3",{id:"name"},"$name"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{}),"protected mixed $name = ' '\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Visibility: ",Object(o.b)("strong",{parentName:"li"},"protected"))),Object(o.b)("h2",{id:"methods"},"Methods"),Object(o.b)("h3",{id:"getmigrationpaths"},"getMigrationPaths"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{}),"array TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand::getMigrationPaths()\n")),Object(o.b)("p",null,"Get all of the migration paths."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Visibility: ",Object(o.b)("strong",{parentName:"li"},"protected"))),Object(o.b)("h3",{id:"usingrealpath"},"usingRealPath"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{}),"boolean TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand::usingRealPath()\n")),Object(o.b)("p",null,'Determine if the given path(s) are pre-resolved "real" paths.'),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Visibility: ",Object(o.b)("strong",{parentName:"li"},"protected"))),Object(o.b)("h3",{id:"getmigrationpath"},"getMigrationPath"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{}),"string TinyPixel\\Acorn\\Database\\Console\\Commands\\Migrate\\BaseCommand::getMigrationPath()\n")),Object(o.b)("p",null,"Get the path to the migration directory."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Visibility: ",Object(o.b)("strong",{parentName:"li"},"protected"))))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/console/commands/migrate/basecommand.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-console-commands-migrate-basecommand.151c9eda543485dea75c.js.map